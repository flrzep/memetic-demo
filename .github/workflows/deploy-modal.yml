name: Deploy to Modal

on:
  push:
    branches: [main, production]
    paths:
      - 'modal-service/**'
      - '.github/workflows/deploy-modal.yml'
  pull_request:
    branches: [main]
    paths:
      - 'modal-service/**'
  workflow_dispatch: # Allow manual triggering

env:
  MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
  MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
  MODAL_ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}

jobs:
  validate:
    name: Validate Modal Services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Modal
        run: |
          pip install modal

      - name: Authenticate with Modal
        run: |
          modal token set --token-id $MODAL_TOKEN_ID --token-secret $MODAL_TOKEN_SECRET

      - name: Validate Modal configuration
        run: |
          cd modal-service
          python -m modal app validate modal_service.py
          python -m modal app validate webrtc_service.py

  deploy-main-service:
    name: Deploy Main Modal Service
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Modal
        run: |
          pip install modal

      - name: Authenticate with Modal
        run: |
          modal token set --token-id $MODAL_TOKEN_ID --token-secret $MODAL_TOKEN_SECRET

      - name: Deploy main service
        run: |
          cd modal-service
          modal deploy modal_service.py --name memetic-demo-$MODAL_ENVIRONMENT

      - name: Get deployment URL
        id: deployment
        run: |
          cd modal-service
          URL=$(modal app show memetic-demo-$MODAL_ENVIRONMENT --json | jq -r '.web_url')
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Deployed main service to: $URL"

  deploy-webrtc-service:
    name: Deploy WebRTC Modal Service
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Modal
        run: |
          pip install modal

      - name: Authenticate with Modal
        run: |
          modal token set --token-id $MODAL_TOKEN_ID --token-secret $MODAL_TOKEN_SECRET

      - name: Deploy WebRTC service
        run: |
          cd modal-service
          modal deploy webrtc_service.py --name memetic-webrtc-$MODAL_ENVIRONMENT

      - name: Get deployment URL
        id: deployment
        run: |
          cd modal-service
          URL=$(modal app show memetic-webrtc-$MODAL_ENVIRONMENT --json | jq -r '.web_url')
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Deployed WebRTC service to: $URL"

  update-environment:
    name: Update Environment Configuration
    runs-on: ubuntu-latest
    needs: [deploy-main-service, deploy-webrtc-service]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Modal
        run: |
          pip install modal

      - name: Authenticate with Modal
        run: |
          modal token set --token-id $MODAL_TOKEN_ID --token-secret $MODAL_TOKEN_SECRET

      - name: Get service URLs
        id: urls
        run: |
          cd modal-service
          MAIN_URL=$(modal app show memetic-demo-$MODAL_ENVIRONMENT --json | jq -r '.web_url')
          WEBRTC_URL=$(modal app show memetic-webrtc-$MODAL_ENVIRONMENT --json | jq -r '.web_url')
          echo "main_url=$MAIN_URL" >> $GITHUB_OUTPUT
          echo "webrtc_url=$WEBRTC_URL" >> $GITHUB_OUTPUT

      - name: Create deployment summary
        run: |
          echo "## üöÄ Modal Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployed Services:" >> $GITHUB_STEP_SUMMARY
          echo "- **Main Service**: ${{ steps.urls.outputs.main_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **WebRTC Service**: ${{ steps.urls.outputs.webrtc_url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Environment Variables to Update:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "MODAL_BASE_URL=${{ steps.urls.outputs.main_url }}" >> $GITHUB_STEP_SUMMARY
          echo "MODAL_WEBRTC_URL=${{ steps.urls.outputs.webrtc_url }}" >> $GITHUB_STEP_SUMMARY
          echo "USE_MOCK_MODAL=false" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-main-service, deploy-webrtc-service, update-environment]
    if: always()
    steps:
      - name: Deployment Success
        if: needs.deploy-main-service.result == 'success' && needs.deploy-webrtc-service.result == 'success'
        run: |
          echo "‚úÖ All Modal services deployed successfully!"
          
      - name: Deployment Failed
        if: needs.deploy-main-service.result == 'failure' || needs.deploy-webrtc-service.result == 'failure'
        run: |
          echo "‚ùå Modal deployment failed. Check the logs above."
          exit 1
