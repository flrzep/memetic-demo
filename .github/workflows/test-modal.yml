name: Test Modal Services

on:
  pull_request:
    branches: [main]
    paths:
      - 'modal-service/**'
  push:
    branches:
      - 'feature/**'
      - 'dev/**'
    paths:
      - 'modal-service/**'

env:
  MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
  MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}

jobs:
  test:
    name: Test Modal Services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install modal
          cd modal-service
          pip install -r requirements.txt

      - name: Authenticate with Modal
        run: |
          modal token set --token-id $MODAL_TOKEN_ID --token-secret $MODAL_TOKEN_SECRET

      - name: Validate Modal services
        run: |
          cd modal-service
          python -m modal app validate modal_service.py
          python -m modal app validate webrtc_service.py

      - name: Run Modal tests (if any)
        run: |
          cd modal-service
          # Add any test commands here
          echo "âœ… Modal services validation passed"

  deploy-preview:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Modal
        run: |
          pip install modal

      - name: Authenticate with Modal
        run: |
          modal token set --token-id $MODAL_TOKEN_ID --token-secret $MODAL_TOKEN_SECRET

      - name: Deploy preview environment
        run: |
          cd modal-service
          BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          modal deploy modal_service.py --name memetic-demo-preview-$BRANCH_NAME
          modal deploy webrtc_service.py --name memetic-webrtc-preview-$BRANCH_NAME

      - name: Comment PR with preview URLs
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = context.payload.pull_request.head.ref.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase();
            const comment = `## ðŸš€ Preview Environment Deployed
            
            Your Modal services have been deployed to a preview environment:
            
            - **Main Service**: \`memetic-demo-preview-${branchName}\`
            - **WebRTC Service**: \`memetic-webrtc-preview-${branchName}\`
            
            Use these for testing your changes before merging.
            
            > Preview environments are automatically cleaned up after PR merge/close.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  cleanup-preview:
    name: Cleanup Preview Environment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Modal
        run: |
          pip install modal

      - name: Authenticate with Modal
        run: |
          modal token set --token-id $MODAL_TOKEN_ID --token-secret $MODAL_TOKEN_SECRET

      - name: Delete preview apps
        run: |
          BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          modal app delete memetic-demo-preview-$BRANCH_NAME --yes || true
          modal app delete memetic-webrtc-preview-$BRANCH_NAME --yes || true
          echo "ðŸ§¹ Cleaned up preview environment for branch: ${{ github.head_ref }}"
